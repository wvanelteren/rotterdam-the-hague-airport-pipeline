[tool.poetry]
name = "rotterdam-the-hague-airport-pipeline"
version = "0.1.1"
description = ""
authors = ["wvanelteren <wvanelteren@gmail.com>"]
readme = "README.md"
packages = [{ include = "rotterdam_the_hague_airport_pipeline" }]

[tool.poetry.dependencies]
python = ">=3.11, <3.12"
pytest = ">=7.2.0"
requests = ">=2.28.1"
python-dotenv = ">=0.21.0"
boto3 = ">=1.26.13"
mock = ">=4.0.3"
pandas = ">=2.0.0"
awswrangler = { version = ">=2.15.1", python = "<3.12"}
tabulate = ">=0.9.0"

[tool.poetry.group.dev.dependencies]
black = ">=22.10.0"
pre-commit = ">=2.20.0"
ruff = ">=0.0.292"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py37']
preview = true

[tool.isort]
# make it compatible with black
profile = "black"

[tool.mypy]
files = ["ingredient_mlpipeline"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]